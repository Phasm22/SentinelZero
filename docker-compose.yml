version: '3.8'

services:
  sentinelzero:
    build: .
    container_name: sentinelzero
    restart: unless-stopped
    ports:
      - "5001:5001"
    volumes:
      # Persistent storage for scan results
      - ./data/scans:/app/scans
      - ./data/database:/app/instance
      - ./data/logs:/app/logs
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      # Network scanning configuration
      - SCAN_NETWORK=172.16.0.0/22
      - MAX_HOSTS=100
    networks:
      - sentinelzero-net
    # Required for network scanning
    cap_add:
      - NET_ADMIN
      - NET_RAW
    # Security settings
    security_opt:
      - no-new-privileges:true
    # Resource limits - use 90% of available resources (4 cores, 8GB RAM)
    deploy:
      resources:
        limits:
          memory: 7G          # 90% of 8GB available memory
          cpus: '3.6'         # 90% of 4 available CPU cores
        reservations:
          memory: 1G          # Generous baseline for reliable startup
          cpus: '0.5'         # Reserve half a core for OS operations
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/dashboard-stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  sentinelzero-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.99.0.0/24  # Example isolated subnet